package com.example.android.bakingapp;import android.content.Context;import android.support.test.InstrumentationRegistry;import android.support.test.espresso.Espresso;import android.support.test.espresso.IdlingResource;import android.support.test.espresso.contrib.RecyclerViewActions;import android.support.test.rule.ActivityTestRule;import android.support.test.runner.AndroidJUnit4;import com.example.android.bakingapp.expresso.RecyclerViewMatcher;import org.junit.After;import org.junit.Before;import org.junit.Rule;import org.junit.Test;import org.junit.runner.RunWith;import static android.support.test.espresso.Espresso.onData;import static android.support.test.espresso.Espresso.onView;import static android.support.test.espresso.action.ViewActions.click;import static android.support.test.espresso.action.ViewActions.closeSoftKeyboard;import static android.support.test.espresso.action.ViewActions.typeText;import static android.support.test.espresso.assertion.ViewAssertions.matches;import static android.support.test.espresso.matcher.ViewMatchers.hasDescendant;import static android.support.test.espresso.matcher.ViewMatchers.withId;import static android.support.test.espresso.matcher.ViewMatchers.withText;import static org.hamcrest.Matchers.anything;import static org.junit.Assert.assertEquals;/** * Instrumentation test, which will execute on an Android device. * * @see <a href="http://d.android.com/tools/testing">Testing documentation</a> */@RunWith(AndroidJUnit4.class)public class MainActivityTest {    public static final String RECIPE_NAME = "Nutella Pie";    public static final String INGREDIENT_NAME = "Graham Cracker crumbs (2 CUP)";    public static final String STEP_TWO_SHORT_DESCRIPTION = "Prep the cookie crust.";    @Rule    public ActivityTestRule<MainActivity> mActivityRule =            new ActivityTestRule<>(MainActivity.class);    private IdlingResource mIdlingResource;    @Before    public void registerIdlingResource() {        mIdlingResource = mActivityRule.getActivity().getIdlingResource();        // To prove that the test fails, omit this call:        Espresso.registerIdlingResources(mIdlingResource);    }    // Convenience helper    public static RecyclerViewMatcher withRecyclerView(final int recyclerViewId) {        return new RecyclerViewMatcher(recyclerViewId);    }    @Test    public void useAppContext() throws Exception {        // Context of the app under test.        Context appContext = InstrumentationRegistry.getTargetContext();        assertEquals("com.example.android.bakingapp", appContext.getPackageName());    }    @Test    public void nutellaPieRecipeIsDisplayed() {        // Check item at position 0 has "Some content"        onView(withRecyclerView(R.id.rv_recipes).atPosition(0))                .check(matches(hasDescendant(withText(RECIPE_NAME))));    }    @Test    public void clickRecipeItem_StartStepListActivity() {        // Click item at position 0        onView(withId(R.id.rv_recipes))                .perform(RecyclerViewActions.actionOnItemAtPosition(0, click()));        // Checks that the StepListActivity opens with the correct steps displayed        // onData(anything()).inAdapterView(withId(R.id.ingredient_list)).atPosition(1).check(matches(withText(INGREDIENT_NAME)));    }    @After    public void unregisterIdlingResource() {        if (mIdlingResource != null) {            Espresso.unregisterIdlingResources(mIdlingResource);        }    }}